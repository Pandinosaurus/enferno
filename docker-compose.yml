services:

  redis:
    container_name: redis 
    image: 'redis:7-alpine'
    user: "${DOCKER_UID:-1000}"
    command: redis-server --requirepass ${REDIS_PASSWORD:-verystrongpass}
    volumes:
      - 'redis-data:/data'
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    container_name: postgres
    image: 'postgres:15-alpine'
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=enferno
      - POSTGRES_PASSWORD=${DB_PASSWORD:-verystrongpass}
      - POSTGRES_DB=enferno
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "enferno"]
      interval: 5s
      timeout: 3s
      retries: 3

  website:
    container_name: website
    build: .
    user: "${DOCKER_UID:-1000}"
    volumes:
      - '.:/app'
    depends_on:
      - redis
      - postgres
    ports:
      - '8000:5000'
    environment:
      - FLASK_APP=run.py
      - FLASK_DEBUG=0
      - SQLALCHEMY_DATABASE_URI=postgresql://enferno:${DB_PASSWORD:-verystrongpass}@postgres/enferno
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-verystrongpass}@redis:6379/2
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-verystrongpass}@redis:6379/3
      - REDIS_SESSION=redis://:${REDIS_PASSWORD:-verystrongpass}@redis:6379/1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    container_name: nginx
    restart: always
    image: 'nginx:alpine'
    user: "${DOCKER_UID:-1000}"
    ports:
      - '80:80'
    volumes:
      - './enferno/static/:/app/static/:ro'
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './nginx/enferno.conf:/etc/nginx/conf.d/default.conf:ro'
    tmpfs:
      - /tmp:exec
      - /var/run
      - /var/cache/nginx
    depends_on:
      - website
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s

  celery:
    container_name: celery
    build: .
    user: "${DOCKER_UID:-1000}"
    command: celery -A enferno.tasks worker -l info
    volumes:
      - '.:/app'
    depends_on:
      - redis
    environment:
      - FLASK_APP=run.py
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-verystrongpass}@redis:6379/2
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-verystrongpass}@redis:6379/3
      - REDIS_SESSION=redis://:${REDIS_PASSWORD:-verystrongpass}@redis:6379/1

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
